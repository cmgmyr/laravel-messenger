name: Laravel Messenger - PostgreSQL Tests
on:
  push:
    branches:
      - master
      - develop
      - feature/**
  pull_request:
    branches:
      - master
      - develop

jobs:
  laravel-tests:
    runs-on: ubuntu-latest
    # Service container Postgresql postgresql
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image (also with version)
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB:  db_test_laravel
        ## map the "external" 55432 port with the "internal" 5432
        ports:
          - 55432:5432
        # Set health checks to wait until postgresql database has started (it takes some seconds to start)
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-latest]
        php-versions: [ '8.0' ]
        dependency-stability: [ prefer-stable ]

        laravel: [ '8.*' ]
        include:
          - laravel:  8.*
            testbench: 6.*

    name: P${{ matrix.php-versions }} - L${{ matrix.laravel }} - ${{ matrix.dependency-stability }} - ${{ matrix.operating-system}}

    steps:
      - uses: actions/checkout@v2
      - name: Install PHP versions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
      - name: Get Composer Cache Directory 2
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v2
        id: actions-cache
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - name: Cache PHP dependencies
        uses: actions/cache@v2
        id: vendor-cache
        with:
          path: vendor
          key: ${{ runner.OS }}-build-${{ hashFiles('**/composer.lock') }}
      - name: Install Laravel Dependencies
        run: |
          composer require "laravel/framework:${{ matrix.laravel }}" "orchestra/testbench:${{ matrix.testbench }}" --no-interaction --no-update
          composer update --${{ matrix.dependency-stability }} --prefer-dist --no-interaction --no-suggest


      - name: Show dir
        run: pwd
      - name: PHP Version
        run: php --version

      # Code quality
      - name: Execute tests (Unit and Feature tests) via PHPUnit
        # Set environment
        env:
          DB_CONNECTION: pgsql
          DB_DATABASE: db_test_laravel
          DB_PORT: 55432
          DB_USERNAME: postgres
          DB_PASSWORD: postgres

        run: vendor/bin/phpunit --testdox